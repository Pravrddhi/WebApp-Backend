volumes:
  postgres_data: {}
  data_backups: {}
  pgadmin_data: {}
  front_end_data: {}
  

services:
  backend:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: backend_trust_pune_local_django
    container_name: backend_jagdhamb_trust_pune_local
    restart: always
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: production_postgres
    container_name: jagdhamb_trust_pune_local_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - '5432:5432'

  pgadmin:
    image: dpage/pgadmin4:latest  # Official pgAdmin image
    container_name: pgadmin_jagdhamb_trust_pune_local
    restart: always
    ports:
      - '5050:80'  # Expose pgAdmin on port 5050
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"  # pgAdmin login email
      PGADMIN_DEFAULT_PASSWORD: "admin123"  # pgAdmin login password
    volumes:
      - pgadmin_data:/var/lib/pgadmin  # Store pgAdmin data persistently
    depends_on:
      - postgres  # Wait for PostgreSQL to start before pgAdmin
