volumes:
  postgres_data: {}
  data_backups: {}
  pgadmin_data: {}
  front_end_data: {}
  

services:
  backend:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: backend_trust_pune_local_django
    container_name: backend_jagdhamb_trust_pune_local
    develop:
      watch:
        - action: sync
          path: ./docs
          target: /docs
        - action: sync
          path: ./config
          target: /app/config
        - action: sync
          path: ./
          target: /app/
        - action: rebuild
          path: ./requirements/
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: production_postgres
    container_name: jagdhamb_trust_pune_local_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - '5432:5432'

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin4_container
  #   restart: always
  #   ports:
  #     - "8888:80"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@gmail.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin

  front-end:
    build:
      context: .
      dockerfile: ./compose/local/react/Dockerfile
    image: frontend_jagdhamb_trust_pune_local
    container_name: frontend_jagdhamb_trust_pune_local
    develop:
      watch:
        - action: sync
          path: ./
          target: /src/
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    depends_on:
      - backend
    # env_file:
    #   - ./.envs/.local/.django
    #   - ./.envs/.local/.postgres
    ports:
      - '3000:3000'
    command: /start
